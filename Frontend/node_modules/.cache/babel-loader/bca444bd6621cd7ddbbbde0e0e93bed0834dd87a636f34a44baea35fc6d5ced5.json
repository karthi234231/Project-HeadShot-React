{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KARTHIK\\\\Documents\\\\PROJECTS\\\\FullStack\\\\Stolen\\\\Portfolio_dump\\\\Frontend\\\\src\\\\Pages\\\\About\\\\About.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import \"./Style.scss\";\n\n// const About = () => {\n//   const handleScriptSubmit = (script) => {\n//     fetch(\"/run_script\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ script }),\n//     }).then((response) => {\n//       // Handle response if needed\n//       console.log(\"Script executed:\", script);\n//     });\n//   };\n\n//   const handleStopScript = () => {\n//     fetch(\"/stop_script\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//     }).then((response) => {\n//       // Handle response if needed\n//       console.log(\"Script stopped.\");\n//     });\n//   };\n\n//   return (\n//     <>\n//       <h1 className=\"two_h\">Face Detection and Tracking</h1>\n//       <div className=\"containerr\">\n//         <button\n//           className=\"box\"\n//           onClick={() => handleScriptSubmit(\"face_detection\")}\n//         >\n//           Face Detection\n//         </button>\n//         <button\n//           className=\"box\"\n//           onClick={() => handleScriptSubmit(\"face_tracking\")}\n//         >\n//           Head Target\n//         </button>\n//         <button\n//           className=\"box\"\n//           onClick={() => handleScriptSubmit(\"tracking_system\")}\n//         >\n//           Track Motion\n//         </button>\n//         <button className=\"stop-button\" onClick={handleStopScript}>\n//           Stop Script\n//         </button>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default About;\n\nimport React from \"react\";\nimport \"./Style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction About() {\n  _s();\n  const [status, setStatus] = useState(\"\");\n  const handleScriptAction = async (script, action) => {\n    const url = action === \"start\" ? '/run_script' : '/stop_script';\n    const data = action === \"start\" ? {\n      script\n    } : {};\n    try {\n      const response = await fetch(`http://127.0.0.1:5000${url}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      const result = await response.json();\n      setStatus(result.status);\n    } catch (error) {\n      console.error('Error:', error);\n      setStatus(\"Error communicating with the server\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Script Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleScriptAction('face_detection', 'start'),\n      children: \"Start Face Detection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleScriptAction('face_tracking', 'start'),\n      children: \"Start Face Tracking\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleScriptAction('tracking_system', 'start'),\n      children: \"Start Tracking System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleScriptAction('', 'stop'),\n      children: \"Stop Current Script\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(About, \"tFQEoWuxTnOS0Tj0020ukhuK2rw=\");\n_c = About;\nexport default About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","About","_s","status","setStatus","useState","handleScriptAction","script","action","url","data","response","fetch","method","headers","body","JSON","stringify","result","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/KARTHIK/Documents/PROJECTS/FullStack/Stolen/Portfolio_dump/Frontend/src/Pages/About/About.js"],"sourcesContent":["// import React from \"react\";\n// import \"./Style.scss\";\n\n// const About = () => {\n//   const handleScriptSubmit = (script) => {\n//     fetch(\"/run_script\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//       body: JSON.stringify({ script }),\n//     }).then((response) => {\n//       // Handle response if needed\n//       console.log(\"Script executed:\", script);\n//     });\n//   };\n\n//   const handleStopScript = () => {\n//     fetch(\"/stop_script\", {\n//       method: \"POST\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//       },\n//     }).then((response) => {\n//       // Handle response if needed\n//       console.log(\"Script stopped.\");\n//     });\n//   };\n\n//   return (\n//     <>\n//       <h1 className=\"two_h\">Face Detection and Tracking</h1>\n//       <div className=\"containerr\">\n//         <button\n//           className=\"box\"\n//           onClick={() => handleScriptSubmit(\"face_detection\")}\n//         >\n//           Face Detection\n//         </button>\n//         <button\n//           className=\"box\"\n//           onClick={() => handleScriptSubmit(\"face_tracking\")}\n//         >\n//           Head Target\n//         </button>\n//         <button\n//           className=\"box\"\n//           onClick={() => handleScriptSubmit(\"tracking_system\")}\n//         >\n//           Track Motion\n//         </button>\n//         <button className=\"stop-button\" onClick={handleStopScript}>\n//           Stop Script\n//         </button>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default About;\n\n\nimport React from \"react\";\nimport \"./Style.scss\";\n\nfunction About() {\n  const [status, setStatus] = useState(\"\");\n\n  const handleScriptAction = async (script, action) => {\n    const url = action === \"start\" ? '/run_script' : '/stop_script';\n    const data = action === \"start\" ? { script } : {};\n\n    try {\n      const response = await fetch(`http://127.0.0.1:5000${url}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(data),\n      });\n      const result = await response.json();\n      setStatus(result.status);\n    } catch (error) {\n      console.error('Error:', error);\n      setStatus(\"Error communicating with the server\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>Script Management</h2>\n      <button onClick={() => handleScriptAction('face_detection', 'start')}>\n        Start Face Detection\n      </button>\n      <button onClick={() => handleScriptAction('face_tracking', 'start')}>\n        Start Face Tracking\n      </button>\n      <button onClick={() => handleScriptAction('tracking_system', 'start')}>\n        Start Tracking System\n      </button>\n      <button onClick={() => handleScriptAction('', 'stop')}>\n        Stop Current Script\n      </button>\n      <p>Status: {status}</p>\n    </div>\n  );\n}\n\nexport default About;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}